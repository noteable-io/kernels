"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1,title:"Installation"},i=void 0,o={unversionedId:"getting-started/installation",id:"getting-started/installation",title:"Installation",description:"Clone the project",source:"@site/docs/getting-started/installation.md",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/kernels/getting-started/installation",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Installation"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/kernels/category/getting-started"},next:{title:"Project Structure",permalink:"/kernels/getting-started/structure"}},s={},c=[{value:"Clone the project",id:"clone-the-project",level:3},{value:"Requirements",id:"requirements",level:3},{value:"Naming Conventions",id:"naming-conventions",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"clone-the-project"},"Clone the project"),(0,a.kt)("p",null,"To get started, you'll need to clone the ",(0,a.kt)("inlineCode",{parentName:"p"},"noteable-io/kernels")," project from Github."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"git clone git@github.com:noteable-io/kernels\ncd kernels\n")),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"In order to build the various kernels provided at Noteable, you'll need a few system tools."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/"},"Docker")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://taskfile.dev/installation/"},"Taskfile"))),(0,a.kt)("p",null,"Ensure the following commands return successfully before continuing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker info\ntask -h\n")),(0,a.kt)("h3",{id:"naming-conventions"},"Naming Conventions"),(0,a.kt)("p",null,"All of the kernels generated by this project are named using the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ghcr.io/noteable-io/kernel(-gpu)-${language-(version)}-$(identifier)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Language: The runtime language of the kernel (Python, r, Rust, etc)"),(0,a.kt)("li",{parentName:"ul"},"Version: The installed version of the above language"),(0,a.kt)("li",{parentName:"ul"},"Identifier: (Optional) Human readable classifier for the image (datascience, noteable)"),(0,a.kt)("li",{parentName:"ul"},"GPU: If the build is for GPU enabled kernels, it begins with ",(0,a.kt)("inlineCode",{parentName:"li"},"kernel-gpu"),", rather than ",(0,a.kt)("inlineCode",{parentName:"li"},"kernel"))),(0,a.kt)("p",null,"For example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"R base kernel (4.3.0): ",(0,a.kt)("inlineCode",{parentName:"li"},"ghcr.io/noteable-io/kernel-r-4.3.0")),(0,a.kt)("li",{parentName:"ul"},"GPU enabled Python 3.10 Datascience kernel: ",(0,a.kt)("inlineCode",{parentName:"li"},"ghcr.io/noteable-io/kernel-gpu-python-3.10-datascience"))))}d.isMDXComponent=!0}}]);