name: Build kernel images

on:
  push:
    branches:
      - main

jobs:
  base-linting:
    name: base-linting
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint Dockerfile, Shell scripts, YAML
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Linters to enable
          VALIDATE_BASH: true
          VALIDATE_BASH_EXEC: true
          VALIDATE_DOCKERFILE_HADOLINT: true
          VALIDATE_YAML: true

  build_generic_kernel:
    permissions:
      id-token: write
      contents: read
      packages: write
      actions: write
    uses: ./.github/workflows/reusable-docker-build.yml
    strategy:
      matrix:
        # Must be a supported version by jupyter/datascience-notebook
        # https://hub.docker.com/r/jupyter/datascience-notebook/tags?page=1&name=python-
        version: [ "3.9.13", "3.8.13" ]
    secrets: inherit
    with:
      dockerfile: ./kernels/python/Dockerfile
      context: ./kernels/python
      images: |
        ghcr.io/${{ github.repository }}/python
      tags: |
        type=sha,format=long,prefix=${{ matrix.version }}-
        type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }},prefix=${{ matrix.version }}-
      build_args: |
        PYTHON_VERSION=${{ matrix.version }}
      platforms: "linux/amd64"

  build_python_kernel:
    permissions:
      id-token: write
      contents: read
      packages: write
      actions: write
    uses: ./.github/workflows/reusable-docker-build.yml
    strategy:
      matrix:
        # Must be a supported version by jupyter/datascience-notebook
        # https://hub.docker.com/r/jupyter/datascience-notebook/tags?page=1&name=python-
        version: [ "3.9.13", "3.8.13" ]
    secrets: inherit
    with:
      dockerfile: ./kernels/python/Dockerfile
      context: ./kernels/python
      images: |
        ghcr.io/${{ github.repository }}/python
      tags: |
        type=sha,format=long,prefix=${{ matrix.version }}-
        type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }},prefix=${{ matrix.version }}-
      build_args: |
        PYTHON_VERSION=${{ matrix.version }}
      platforms: "linux/amd64"
